name: "c++ test"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  CoreTest:
    name: cpp test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v2
      - name: install requirement
        run: |
          sudo apt -qq -y update
          sudo apt -qq install clang-tidy-10 clang-format-10
      - name: format filename
        run: |
          IFS=$'\n'
          for fname in `find . -type f -name '*.cpp' -o -name '*.cc' -o -name '*.h'`
          do 
            echo "${fname}"
            new_fname=`echo ${fname} | tr ' ' '_'`
            echo "      ${new_fname}"
            new_fname=`echo ${new_fname} | tr 'A-Z' 'a-z'`
            echo "      ${new_fname}"
            new_fname=`echo ${new_fname} | tr '-' '_'`
            echo "      ${new_fname}"
            new_fname=${new_fname/.cc/.cpp}
            echo "      ${new_fname}"
            if [ ${fname} != ${new_fname} ]
            then
              echo "      ${fname} --> ${new_fname}"
              git "mv" "${fname}" ${new_fname}
            fi
          done
          git commit -am "formatting filenames ${GITHUB_SHA::8}" ||  true
      - name: static lint config
        run: cmake -B build -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
        
  build:
    name: compile checking
    runs-on: ${{ matrix.os }}
    needs: [CoreTest]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - uses: actions/checkout@master
      with:
        submodules: true
    - run: cmake -B ./build -S .
    - run: cmake --build build
